<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Waste Management</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* General Styles */
        body {
            font-family: 'Arial', sans-serif;
            line-height: 1.6;
            background-color: #1a1a1a;
            color: #e0e0e0;
            margin: 0;
        }
        
        header {
            background: linear-gradient(135deg, #004d00, #008000);
            color: #fff;
            padding: 1.5rem 0;
            text-align: center;
            font-size: 1.8rem;
            font-weight: bold;
            position: relative;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        
        .three-dots {
            position: absolute;
            top: 50%;
            left: 20px;
            transform: translateY(-50%);
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        
        .three-dots:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        
        .three-dots div {
            width: 5px;
            height: 5px;
            background-color: #fff;
            border-radius: 50%;
            margin: 2px;
        }

        .search-bar {
            text-align: center;
            padding: 1rem;
            background: #333;
        }
        
        .search-bar input {
            padding: 0.8rem;
            width: 80%;
            max-width: 400px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            font-size: 1rem;
            outline: none;
            transition: background 0.3s ease;
        }
        
        .search-bar input:focus {
            background: rgba(255, 255, 255, 0.2);
        }

        nav {
            background: #111;
            display: flex;
            justify-content: center;
            gap: 20px;
            padding: 1rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        
        nav a {
            color: #fff;
            text-decoration: none;
            padding: 0.8rem 1.5rem;
            transition: background 0.3s ease, transform 0.3s ease;
            border-radius: 25px;
            font-size: 1rem;
        }
        
        nav a:hover {
            background: #008000;
            transform: translateY(-3px);
        }

        /* Image Container */
        .image-container {
            position: relative;
            text-align: center;
            overflow: hidden;
        }

        .image-container img {
            width: 100%;
            display: block;
            filter: brightness(0.7);
            transition: filter 0.5s ease;
        }

        .image-container:hover img {
            filter: brightness(1);
        }

        .buttons-container {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: flex;
            gap: 15px;
        }

        .buttons-container button {
            padding: 1rem 2rem;
            border: none;
            background: rgba(0, 128, 0, 0.8);
            color: white;
            font-size: 1.1rem;
            border-radius: 25px;
            cursor: pointer;
            transition: background 0.3s ease, transform 0.3s ease;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        
        .buttons-container button:hover {
            background: rgba(0, 179, 0, 0.9);
            transform: translateY(-5px);
        }

        /* Stats Dashboard */
        .stats-dashboard {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.7); /* Semi-transparent background */
            padding: 2rem;
            text-align: center;
            color: #fff;
            box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.2);
        }

        .stats-dashboard h2 {
            font-size: 2rem;
            margin-bottom: 1.5rem;
            color: #fff;
        }

        .stats {
            display: flex;
            justify-content: space-around;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 15px;
            text-align: center;
            flex: 1 1 200px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }

        .stat-card i {
            font-size: 2rem;
            color: #00b300;
            margin-bottom: 1rem;
        }

        .stat-card p {
            font-size: 1.2rem;
            margin: 0.5rem 0;
            color: #fff;
        }

        .stat-card span {
            font-size: 1.5rem;
            font-weight: bold;
            color: #00b300;
            transition: color 0.3s ease;
        }

        .stat-card:hover span {
            color: #fff;
        }

        /* Animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card {
            animation: fadeIn 0.5s ease-in-out;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            nav {
                flex-direction: column;
                text-align: center;
            }

            .stat-card {
                flex: 1 1 auto;
            }

            .stats-dashboard h2 {
                font-size: 1.5rem;
            }

            .stat-card p {
                font-size: 1rem;
            }

            .stat-card span {
                font-size: 1.2rem;
            }
        }

        .sidebar {
            position: fixed;
            top: 80px;
            left: 20px;
            background: rgba(68, 68, 68, 0.8);
            padding: 1.5rem;
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        
        .sidebar.visible {
            opacity: 1;
            visibility: visible;
        }
        
        .sidebar a {
            padding: 0.8rem 1.2rem;
            color: #fff;
            text-decoration: none;
            background: rgba(0, 128, 0, 0.8);
            text-align: center;
            border-radius: 25px;
            transition: background 0.3s ease, transform 0.3s ease;
            font-size: 1rem;
        }
        
        .sidebar a:hover {
            background: rgba(0, 179, 0, 0.9);
            transform: translateY(-3px);
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
        }

        footer {
            background: #111;
            color: #fff;
            text-align: center;
            padding: 1.5rem 0;
            margin-top: 2rem;
            box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.2);
        }

        /* Chatbot Styles */
        .chatbot {
            position: fixed;
            bottom: 20px;
            right: 20px;
        }

        .chatbot button {
            padding: 1rem 2rem;
            border: none;
            background: #008000;
            color: white;
            font-size: 1rem;
            border-radius: 25px;
            cursor: pointer;
            transition: background 0.3s ease, transform 0.3s ease;
        }

        .chatbot button:hover {
            background: #00b300;
            transform: translateY(-5px);
        }

        .chatbot-window {
            display: none;
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 300px;
            background: #333;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        .chatbot-header {
            padding: 1rem;
            background: #008000;
            color: white;
            border-radius: 15px 15px 0 0;
            font-size: 1.2rem;
        }

        .chatbot-body {
            padding: 1rem;
            height: 200px;
            overflow-y: auto;
        }

        .chatbot-body p {
            margin: 0.5rem 0;
        }

        .chatbot-input {
            padding: 0.8rem;
            width: 100%;
            border: none;
            border-radius: 0 0 15px 15px;
            background: #444;
            color: white;
            outline: none;
        }

        @media (max-width: 768px) {
            nav {
                flex-direction: column;
                text-align: center;
            }

            .buttons-container {
                flex-direction: column;
                position: relative;
                top: auto;
                left: auto;
                transform: none;
                padding: 10px;
            }

            .sidebar {
                top: 60px;
                left: 10px;
                right: 10px;
                padding: 1rem;
                border-radius: 10px;
            }

            .chatbot-window {
                width: 90%;
                right: 5%;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="three-dots" onclick="toggleSidebar()">
            <div></div>
            <div></div>
            <div></div>
        </div>
        WasteGrid
    </header>

    <div class="search-bar">
        <input type="text" placeholder="Search...">
    </div>

    <nav>
        <a href="home page 1.html"><i class="fas fa-home"></i> Home</a>
        <a href="login.html"><onclick="fas fa-home"><i class="fas fa-sign-in-alt"></i> Login </a>
        <a href="WtE.html"><onclick="fas fa-home"><i class="fas fa-blog"></i> Energy Process</a>
        <a href="reward.html"><onclick="fas fa-home"><i class="fas fa-gift"></i> Reward</a>
        <a href="feedback.html"><i class="fas fa-envelope"></i> feedback</a>
        <a href="contact us.html"><i class="fas fa-envelope"></i> contact us</a>
 
 
    </a>

    </nav>`

    <!-- Image Container with Stats Dashboard -->
    <div class="image-container">
        <img src="https://wallpapercave.com/wp/wp6286126.jpg" alt="eco">
        <div class="buttons-container">
            <a href="WtE.html"><button onclick="alert('Energy Section')"><i class="fas fa-bolt"></i> Energy</button></a>
            <a href="HTU.html" ><button onclick="alert('How to Use Section')"><i class="fas fa-question-circle"></i> How to Use</button></a>
            <a href="reward.html"><button onclick="alert('Reward Section')"><i class="fas fa-gift"></i> Reward</button></a>
        </div>
        <div class="stats-dashboard">
            <h2>Real-Time Waste Management Stats</h2>
            <div class="stats">
                <div class="stat-card">
                    <i class="fas fa-recycle"></i>
                    <p><span id="waste-recycled">0</span> tons</p>
                    <p>Recycled Today</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-leaf"></i>
                    <p><span id="co2-saved">0</span> kg</p>
                    <p>CO2 Saved</p>
                </div>
                <div class="stat-card">
                    <i class="fas fa-bolt"></i>
                    <p><span id="energy-produced">0</span> kWh</p>
                    <p>Energy Produced</p>
                </div>
            </div>
        </div>
    </div>

    <div class="sidebar" id="sidebar">
        <button class="close-btn" onclick="toggleSidebar()">×</button>
        <a href="imgsharing.html"><i class="fas fa-bolt"></i> img of waste</a>
        <a href="reward.html"><i class="fas fa-gift"></i> Reward</a>
        <a href="WtE.html"><i class="fas fa-gift"></i> Energy Process</a>
        <a href="login.html"><i class="fas fa-gift"></i> Login</a>
        <a href="#Services"><i class="fas fa-gift"></i> Services</a>
        <a href="feedback.html"><i class="fas fa-gift"></i> feedback</a>
        <a href="home page 1.html"><i class="fas fa-gift"></i> Home</a>

    </div>

    <!-- AI Chatbot -->
    <div class="chatbot">
        <button onclick="toggleChatbot()"><i class="fas fa-robot"></i> Chat with EcoBot</button>
        <div class="chatbot-window" id="chatbot-window">
            <div class="chatbot-header">EcoBot</div>
            <div class="chatbot-body" id="chatbot-body">
                <p><strong>EcoBot:</strong> Hello! How can I assist you with waste management today?</p>
            </div>
            <input type="text" id="chatbot-input" class="chatbot-input" placeholder="Ask me anything..." onkeypress="handleChatInput(event)">
        </div>
    </div>

    <footer>
        &copy; 2025 Waste Management. All rights reserved.
    </footer>

    <script>
        // Real-Time Stats Animation
        let wasteRecycled = 0;
        let co2Saved = 0;
        let energyProduced = 0;

        function updateStats() {
            wasteRecycled += Math.floor(Math.random() * 10);
            co2Saved += Math.floor(Math.random() * 5);
            energyProduced += Math.floor(Math.random() * 20);

            document.getElementById("waste-recycled").textContent = wasteRecycled;
            document.getElementById("co2-saved").textContent = co2Saved;
            document.getElementById("energy-produced").textContent = energyProduced;

            // Animate the stats
            const statCards = document.querySelectorAll(".stat-card");
            statCards.forEach(card => {
                card.style.animation = "none";
                void card.offsetWidth; // Trigger reflow
                card.style.animation = "fadeIn 0.5s ease-in-out";
            });
        }

        // Update stats every 2 seconds
        setInterval(updateStats, 2000);

        // Toggle Sidebar
        function toggleSidebar() {
            const sidebar = document.getElementById("sidebar");
            sidebar.classList.toggle("visible");
        }

        // Toggle Chatbot
        function toggleChatbot() {
            const chatbotWindow = document.getElementById("chatbot-window");
            chatbotWindow.style.display = chatbotWindow.style.display === "block" ? "none" : "block";
        }

        // Handle Chat Input
        function handleChatInput(event) {
            if (event.key === "Enter") {
                const input = document.getElementById("chatbot-input").value.trim();
                if (input) {
                    const chatbotBody = document.getElementById("chatbot-body");
                    chatbotBody.innerHTML += `<p><strong>You:</strong> ${input}</p>`;

                    // Get AI response
                    getAIResponse(input).then(response => {
                        chatbotBody.innerHTML += `<p><strong>EcoBot:</strong> ${response}</p>`;
                        
                        // Scroll to bottom
                        chatbotBody.scrollTop = chatbotBody.scrollHeight;
                    });

                    // Clear input
                    document.getElementById("chatbot-input").value = "";
                }
            }
        }

        // Mock AI Response function (simulates backend API integration)
        async function getAIResponse(input) {
            // This is a simplified mock of API interaction
            // In production, you would replace this with actual API calls

            // Simulate network delay
            await new Promise(resolve => setTimeout(resolve, 500));
            
            // Simple response mapping for waste management questions
            const responses = {
                "recycling": "Recycling involves collecting and processing materials that would otherwise be thrown away as trash and turning them into new products. Materials like paper, glass, plastic, and metal can all be recycled.",
                "waste": "Proper waste management helps reduce pollution, conserve natural resources, and minimize landfill usage. We offer various services for different types of waste.",
                "compost": "Composting is a natural process that turns organic waste into nutrient-rich soil. It's great for gardens and reduces methane emissions from landfills.",
                "pickup": "We offer regular waste pickup services. You can schedule pickups through our website or mobile app.",
                "energy": "Our waste-to-energy facilities convert non-recyclable waste into clean, renewable energy, reducing reliance on fossil fuels.",
                "reward": "Our rewards program gives you points for responsible waste disposal. These points can be redeemed for discounts or eco-friendly products."
            };
            
            // Check for keywords in user input
            const lowerInput = input.toLowerCase();
            for (const [keyword, response] of Object.entries(responses)) {
                if (lowerInput.includes(keyword)) {
                    return response;
                }
            }
            
            // Default response
            return "I'm here to help with your waste management questions. You can ask about recycling, composting, waste collection, energy production, or our rewards program.";
        }

        // Open Login Modal
        function openLoginModal() {
            alert("Login functionality will be added here.");
        }

        // Open Blog Page
        function openBlogPage() {
            alert("Blog page will be displayed here.");
        }

        // Open Reward Page
        function openRewardPage() {
            alert("Reward page will be displayed here.");
        }
    </script>
</body>
</html>
